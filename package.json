{
  "name": "projen",
  "description": "CDK for software projects",
  "repository": {
    "type": "git",
    "url": "https://github.com/projen/projen.git"
  },
  "bin": {
    "projen": "bin/projen"
  },
  "scripts": {
    "build": "wireit",
    "bump": "wireit",
    "bundle:task-runner": "wireit",
    "clobber": "wireit",
    "compat": "wireit",
    "compile": "wireit",
    "contributors:update": "wireit",
    "default": "wireit",
    "devenv:setup": "wireit",
    "docgen": "wireit",
    "eject": "wireit",
    "eslint": "wireit",
    "integ": "wireit",
    "integ:python-compat": "wireit",
    "package": "wireit",
    "package-all": "wireit",
    "package:go": "wireit",
    "package:java": "wireit",
    "package:js": "wireit",
    "package:python": "wireit",
    "post-compile": "wireit",
    "post-upgrade": "wireit",
    "pre-compile": "wireit",
    "readme-macros": "wireit",
    "release": "wireit",
    "test": "wireit",
    "test:update": "wireit",
    "test:watch": "wireit",
    "unbump": "wireit",
    "upgrade": "wireit",
    "watch": "wireit",
    "projen": "/bin/bash ./projen.bash"
  },
  "author": {
    "name": "Amazon Web Services",
    "url": "https://aws.amazon.com",
    "organization": true
  },
  "devDependencies": {
    "@types/conventional-changelog-config-spec": "^2.1.1",
    "@types/fs-extra": "^8",
    "@types/glob": "^7.2.0",
    "@types/ini": "^1.3.31",
    "@types/jest": "^27.4.1",
    "@types/node": "^12",
    "@types/semver": "^7.3.9",
    "@types/yargs": "^15.0.14",
    "@typescript-eslint/eslint-plugin": "^5",
    "@typescript-eslint/parser": "^5",
    "all-contributors-cli": "^6.20.0",
    "esbuild": "^0.14.38",
    "eslint": "^8",
    "eslint-config-prettier": "^8.5.0",
    "eslint-import-resolver-node": "^0.3.6",
    "eslint-import-resolver-typescript": "^2.7.1",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "^27",
    "jest-junit": "^13",
    "jsii": "^1.57.0",
    "jsii-diff": "^1.57.0",
    "jsii-docgen": "^1.8.110",
    "jsii-pacmak": "^1.57.0",
    "json-schema": "^0.4.0",
    "markmac": "^0.1.146",
    "npm-check-updates": "^12",
    "prettier": "^2.6.2",
    "standard-version": "^9",
    "ts-jest": "^27.1.4",
    "typescript": "^3.9.10",
    "wireit": "^0.2.1"
  },
  "dependencies": {
    "@iarna/toml": "^2.2.5",
    "case": "^1.6.3",
    "chalk": "^4.1.2",
    "conventional-changelog-config-spec": "^2.1.0",
    "fs-extra": "^9.1.0",
    "glob": "^7",
    "ini": "^2.0.0",
    "semver": "^7.3.7",
    "shx": "^0.3.4",
    "xmlbuilder2": "^2.4.1",
    "yaml": "2.0.0-11",
    "yargs": "^16.2.0"
  },
  "bundledDependencies": [
    "@iarna/toml",
    "case",
    "chalk",
    "conventional-changelog-config-spec",
    "fs-extra",
    "glob",
    "ini",
    "semver",
    "shx",
    "xmlbuilder2",
    "yaml",
    "yargs"
  ],
  "keywords": [
    "cdk",
    "cicd",
    "generator",
    "management",
    "project",
    "scaffolding"
  ],
  "engines": {
    "node": ">= 12.7.0"
  },
  "main": "lib/index.js",
  "license": "Apache-2.0",
  "wireit": {
    "default": {
      "command": "node .projenrc.js",
      "clean": false,
      "files": [
        "package.json",
        ".projenrc.js",
        "lib/**"
      ],
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "eject": {
      "command": "/bin/bash ./projen.bash default",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "pre-compile": {
      "clean": false,
      "dependencies": [
        "default"
      ],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "compile": {
      "command": "jsii --silence-warnings=reserved-word",
      "clean": false,
      "files": [
        "src/**/*.ts",
        "tsconfig.json"
      ],
      "output": [
        "lib/**"
      ],
      "dependencies": [
        "pre-compile"
      ],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "post-compile": {
      "command": "/bin/bash ./projen.bash docgen && /bin/bash ./projen.bash readme-macros",
      "clean": false,
      "dependencies": [
        "compile",
        "bundle:task-runner",
        "default"
      ],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "test": {
      "command": "jest --passWithNoTests --all --updateSnapshot && /bin/bash ./projen.bash eslint",
      "clean": false,
      "dependencies": [
        "compile"
      ],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "package": {
      "command": "if [ ! -z ${CI} ]; then mkdir -p dist && rsync -a . dist --exclude .git --exclude node_modules; else /bin/bash ./projen.bash package-all; fi",
      "clean": false,
      "dependencies": [
        "post-compile"
      ],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "build": {
      "clean": false,
      "dependencies": [
        "default",
        "pre-compile",
        "compile",
        "post-compile",
        "test",
        "package"
      ],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "clobber": {
      "command": "git checkout -b scratch && git checkout $BRANCH && git fetch origin && git reset --hard origin/$BRANCH && git clean -fdx && echo ready to rock! (unpushed commits are under the \"scratch\" branch)",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "test:watch": {
      "command": "jest --watch",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "test:update": {
      "command": "jest --updateSnapshot",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "bump": {
      "command": "/usr/local/Cellar/node/17.8.0/bin/node /Volumes/workplace/projen/lib/release/bump-version.task.js",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "unbump": {
      "command": "/usr/local/Cellar/node/17.8.0/bin/node /Volumes/workplace/projen/lib/release/reset-version.task.js",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "release": {
      "command": "rm -fr dist && /bin/bash ./projen.bash bump && /bin/bash ./projen.bash build && /bin/bash ./projen.bash unbump && git diff --ignore-space-at-eol --exit-code",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "post-upgrade": {
      "command": "echo No commands to run.",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "upgrade": {
      "command": "echo No commands to run.",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "watch": {
      "command": "jsii -w --silence-warnings=reserved-word",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "eslint": {
      "command": "eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test build-tools .projenrc.js",
      "clean": false,
      "files": [
        ".prettierrc.json",
        ".prettierignore",
        ".eslintrc.json",
        "tsconfig.dev.json"
      ],
      "output": [
        "src/**/*.ts",
        "test/**/*.ts",
        "build-tools/**/*.ts",
        ".projenrc.js"
      ],
      "dependencies": [
        "compile"
      ],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "compat": {
      "command": "jsii-diff npm:$(node -p \"require('./package.json').name\") -k --ignore-file .compatignore || (echo \"\nUNEXPECTED BREAKING CHANGES: add keys such as 'removed:constructs.Node.of' to .compatignore to skip.\n\" && exit 1)",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "package-all": {
      "clean": false,
      "dependencies": [
        "package:js",
        "package:java",
        "package:python",
        "package:go"
      ],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "package:js": {
      "command": "jsii-pacmak -v --target js",
      "clean": false,
      "files": [
        "lib/**"
      ],
      "output": [
        "dist/js"
      ],
      "dependencies": [
        "compile"
      ],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "package:java": {
      "command": "jsii-pacmak -v --target java",
      "clean": false,
      "files": [
        "lib/**"
      ],
      "output": [
        "dist/java"
      ],
      "dependencies": [
        "compile"
      ],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "package:python": {
      "command": "jsii-pacmak -v --target python",
      "clean": false,
      "files": [
        "lib/**"
      ],
      "output": [
        "dist/python"
      ],
      "dependencies": [
        "compile"
      ],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "package:go": {
      "command": "jsii-pacmak -v --target go",
      "clean": false,
      "files": [
        "lib/**"
      ],
      "output": [
        "dist/go"
      ],
      "dependencies": [
        "compile"
      ],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "docgen": {
      "command": "jsii-docgen -o docs/api/API.md",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "readme-macros": {
      "command": "mv README.md README.md.bak && cat README.md.bak | markmac > README.md && rm README.md.bak",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "devenv:setup": {
      "command": "yarn install && /bin/bash ./projen.bash build",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "contributors:update": {
      "command": "all-contributors check | grep \"Missing contributors\" -A 1 | tail -n1 | sed -e \"s/,//g\" | xargs -n1 | grep -v \"[bot]\" | xargs -n1 -I{} all-contributors add {} code",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "integ:python-compat": {
      "command": "scripts/python-compat.sh",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "integ": {
      "command": "/bin/bash ./projen.bash compile && /bin/bash ./projen.bash package:python && /bin/bash ./projen.bash integ:python-compat",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "bundle:task-runner": {
      "command": "esbuild src/task-runtime.ts --outfile=lib/run-task.js --bundle --platform=node --external:\"*/package.json\" && echo \"#!/usr/bin/env node\" | cat - lib/run-task.js | tee lib/run-task.js > /dev/null && echo \"const runtime = new TaskRuntime(\\\".\\\");\nruntime.runTask(process.argv[2]);\" >> lib/run-task.js",
      "clean": false,
      "dependencies": [],
      "packageLocks": [
        "yarn.lock"
      ]
    }
  },
  "version": "0.0.0",
  "jest": {
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.ts?(x)",
      "<rootDir>/(test|src)/**/?(*.)+(spec|test).ts?(x)"
    ],
    "clearMocks": true,
    "collectCoverage": true,
    "coverageReporters": [
      "json",
      "lcov",
      "clover",
      "cobertura"
    ],
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": [
      "/node_modules/"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/"
    ],
    "watchPathIgnorePatterns": [
      "/node_modules/"
    ],
    "reporters": [
      "default",
      [
        "jest-junit",
        {
          "outputDirectory": "test-reports"
        }
      ]
    ],
    "preset": "ts-jest",
    "globals": {
      "ts-jest": {
        "tsconfig": "tsconfig.dev.json"
      }
    }
  },
  "types": "lib/index.d.ts",
  "stability": "experimental",
  "jsii": {
    "outdir": "dist",
    "targets": {
      "java": {
        "package": "io.github.cdklabs.projen",
        "maven": {
          "groupId": "io.github.cdklabs",
          "artifactId": "projen"
        }
      },
      "python": {
        "distName": "projen",
        "module": "projen"
      },
      "go": {
        "moduleName": "github.com/projen/projen-go"
      }
    },
    "tsc": {
      "outDir": "lib",
      "rootDir": "src"
    }
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}