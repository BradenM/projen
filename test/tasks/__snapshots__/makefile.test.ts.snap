// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`"builtin" can be used to execute builtin commands 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

ROOT := $(dir $(firstword $(MAKEFILE_LIST)))

.PHONY: all
all: default

.PHONY: build
build:                        ## Full release build
	@>&2 echo 🤖 Running task \\\\\\\\033[32mbuild\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	cd $(ROOT) ;\\\\
	make default ;\\\\
	cd $(ROOT) ;\\\\
	make pre-compile ;\\\\
	cd $(ROOT) ;\\\\
	make compile ;\\\\
	cd $(ROOT) ;\\\\
	make post-compile ;\\\\
	cd $(ROOT) ;\\\\
	make test ;\\\\
	cd $(ROOT) ;\\\\
	make package ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mbuild\\\\\\\\033[0m. ;\\\\

.PHONY: compile
compile:                      ## Only compile
	@>&2 echo 🤖 Running task \\\\\\\\033[32mcompile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mcompile\\\\\\\\033[0m. ;\\\\

.PHONY: default
default:                      ## Synthesize project files
	@>&2 echo 🤖 Running task \\\\\\\\033[32mdefault\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mdefault\\\\\\\\033[0m. ;\\\\

.PHONY: foo
foo:                          ## No description
	@>&2 echo 🤖 Running task \\\\\\\\033[32mfoo\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	cd $(ROOT) ;\\\\
	false || { >&2 echo \\"condition exited with non-zero - exiting\\" && exit 0; } ;\\\\
	cd $(ROOT) ;\\\\
	node lib/tasks/builtin-example.task.js ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mfoo\\\\\\\\033[0m. ;\\\\

.PHONY: package
package:                      ## Creates the distribution package
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpackage\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpackage\\\\\\\\033[0m. ;\\\\

.PHONY: post-compile
post-compile:                 ## Runs after successful compilation
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpost-compile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpost-compile\\\\\\\\033[0m. ;\\\\

.PHONY: pre-compile
pre-compile:                  ## Prepare the project for compilation
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpre-compile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpre-compile\\\\\\\\033[0m. ;\\\\

.PHONY: test
test:                         ## Run tests
	@>&2 echo 🤖 Running task \\\\\\\\033[32mtest\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mtest\\\\\\\\033[0m. ;\\\\

.PHONY: help
help:                         ## Show help messages for make targets
	@echo \\"\\\\033[1;39mCOMMANDS:\\\\033[0m\\"; grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \\":.*?## \\"}; {printf \\"\\\\t\\\\033[32m%-30s\\\\033[0m %s\\\\n\\", $$1, $$2}'
"
`;

exports[`"condition" can be used to define a command that will determine if a task should be skipped 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

ROOT := $(dir $(firstword $(MAKEFILE_LIST)))

.PHONY: all
all: default

.PHONY: build
build:                        ## Full release build
	@>&2 echo 🤖 Running task \\\\\\\\033[32mbuild\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	cd $(ROOT) ;\\\\
	make default ;\\\\
	cd $(ROOT) ;\\\\
	make pre-compile ;\\\\
	cd $(ROOT) ;\\\\
	make compile ;\\\\
	cd $(ROOT) ;\\\\
	make post-compile ;\\\\
	cd $(ROOT) ;\\\\
	make test ;\\\\
	cd $(ROOT) ;\\\\
	make package ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mbuild\\\\\\\\033[0m. ;\\\\

.PHONY: compile
compile:                      ## Only compile
	@>&2 echo 🤖 Running task \\\\\\\\033[32mcompile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mcompile\\\\\\\\033[0m. ;\\\\

.PHONY: default
default:                      ## Synthesize project files
	@>&2 echo 🤖 Running task \\\\\\\\033[32mdefault\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mdefault\\\\\\\\033[0m. ;\\\\

.PHONY: foo
foo:                          ## No description
	@>&2 echo 🤖 Running task \\\\\\\\033[32mfoo\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	cd $(ROOT) ;\\\\
	false || { >&2 echo \\"condition exited with non-zero - exiting\\" && exit 0; } ;\\\\
	cd $(ROOT) ;\\\\
	foo bar ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mfoo\\\\\\\\033[0m. ;\\\\

.PHONY: package
package:                      ## Creates the distribution package
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpackage\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpackage\\\\\\\\033[0m. ;\\\\

.PHONY: post-compile
post-compile:                 ## Runs after successful compilation
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpost-compile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpost-compile\\\\\\\\033[0m. ;\\\\

.PHONY: pre-compile
pre-compile:                  ## Prepare the project for compilation
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpre-compile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpre-compile\\\\\\\\033[0m. ;\\\\

.PHONY: test
test:                         ## Run tests
	@>&2 echo 🤖 Running task \\\\\\\\033[32mtest\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mtest\\\\\\\\033[0m. ;\\\\

.PHONY: help
help:                         ## Show help messages for make targets
	@echo \\"\\\\033[1;39mCOMMANDS:\\\\033[0m\\"; grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \\":.*?## \\"}; {printf \\"\\\\t\\\\033[32m%-30s\\\\033[0m %s\\\\n\\", $$1, $$2}'
"
`;

exports[`"requiredEnv" can be used to specify required environment variables 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

ROOT := $(dir $(firstword $(MAKEFILE_LIST)))

.PHONY: all
all: default

.PHONY: build
build:                        ## Full release build
	@>&2 echo 🤖 Running task \\\\\\\\033[32mbuild\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	cd $(ROOT) ;\\\\
	make default ;\\\\
	cd $(ROOT) ;\\\\
	make pre-compile ;\\\\
	cd $(ROOT) ;\\\\
	make compile ;\\\\
	cd $(ROOT) ;\\\\
	make post-compile ;\\\\
	cd $(ROOT) ;\\\\
	make test ;\\\\
	cd $(ROOT) ;\\\\
	make package ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mbuild\\\\\\\\033[0m. ;\\\\

.PHONY: compile
compile:                      ## Only compile
	@>&2 echo 🤖 Running task \\\\\\\\033[32mcompile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mcompile\\\\\\\\033[0m. ;\\\\

.PHONY: default
default:                      ## Synthesize project files
	@>&2 echo 🤖 Running task \\\\\\\\033[32mdefault\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mdefault\\\\\\\\033[0m. ;\\\\

.PHONY: foo
foo:                          ## No description
	@>&2 echo 🤖 Running task \\\\\\\\033[32mfoo\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mfoo\\\\\\\\033[0m. ;\\\\

.PHONY: package
package:                      ## Creates the distribution package
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpackage\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpackage\\\\\\\\033[0m. ;\\\\

.PHONY: post-compile
post-compile:                 ## Runs after successful compilation
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpost-compile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpost-compile\\\\\\\\033[0m. ;\\\\

.PHONY: pre-compile
pre-compile:                  ## Prepare the project for compilation
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpre-compile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpre-compile\\\\\\\\033[0m. ;\\\\

.PHONY: test
test:                         ## Run tests
	@>&2 echo 🤖 Running task \\\\\\\\033[32mtest\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mtest\\\\\\\\033[0m. ;\\\\

.PHONY: help
help:                         ## Show help messages for make targets
	@echo \\"\\\\033[1;39mCOMMANDS:\\\\033[0m\\"; grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \\":.*?## \\"}; {printf \\"\\\\t\\\\033[32m%-30s\\\\033[0m %s\\\\n\\", $$1, $$2}'
"
`;

exports[`empty task 1`] = `undefined`;

exports[`env() can be used to add environment variables 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

ROOT := $(dir $(firstword $(MAKEFILE_LIST)))

.PHONY: all
all: default

.PHONY: build
build:                        ## Full release build
	@>&2 echo 🤖 Running task \\\\\\\\033[32mbuild\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	cd $(ROOT) ;\\\\
	make default ;\\\\
	cd $(ROOT) ;\\\\
	make pre-compile ;\\\\
	cd $(ROOT) ;\\\\
	make compile ;\\\\
	cd $(ROOT) ;\\\\
	make post-compile ;\\\\
	cd $(ROOT) ;\\\\
	make test ;\\\\
	cd $(ROOT) ;\\\\
	make package ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mbuild\\\\\\\\033[0m. ;\\\\

.PHONY: compile
compile:                      ## Only compile
	@>&2 echo 🤖 Running task \\\\\\\\033[32mcompile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mcompile\\\\\\\\033[0m. ;\\\\

.PHONY: default
default:                      ## Synthesize project files
	@>&2 echo 🤖 Running task \\\\\\\\033[32mdefault\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mdefault\\\\\\\\033[0m. ;\\\\

.PHONY: my-task
my-task:                      ## No description
	@>&2 echo 🤖 Running task \\\\\\\\033[32mmy-task\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	INITIAL=123 ;\\\\
	ENV=456 ;\\\\
	FOO=BAR ;\\\\
	HELLO=world ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mmy-task\\\\\\\\033[0m. ;\\\\

.PHONY: package
package:                      ## Creates the distribution package
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpackage\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpackage\\\\\\\\033[0m. ;\\\\

.PHONY: post-compile
post-compile:                 ## Runs after successful compilation
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpost-compile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpost-compile\\\\\\\\033[0m. ;\\\\

.PHONY: pre-compile
pre-compile:                  ## Prepare the project for compilation
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpre-compile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpre-compile\\\\\\\\033[0m. ;\\\\

.PHONY: test
test:                         ## Run tests
	@>&2 echo 🤖 Running task \\\\\\\\033[32mtest\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mtest\\\\\\\\033[0m. ;\\\\

.PHONY: help
help:                         ## Show help messages for make targets
	@echo \\"\\\\033[1;39mCOMMANDS:\\\\033[0m\\"; grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \\":.*?## \\"}; {printf \\"\\\\t\\\\033[32m%-30s\\\\033[0m %s\\\\n\\", $$1, $$2}'
"
`;

exports[`multiple "exec" commands 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

ROOT := $(dir $(firstword $(MAKEFILE_LIST)))

.PHONY: all
all: default

.PHONY: build
build:                        ## Full release build
	@>&2 echo 🤖 Running task \\\\\\\\033[32mbuild\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	cd $(ROOT) ;\\\\
	make default ;\\\\
	cd $(ROOT) ;\\\\
	make pre-compile ;\\\\
	cd $(ROOT) ;\\\\
	make compile ;\\\\
	cd $(ROOT) ;\\\\
	make post-compile ;\\\\
	cd $(ROOT) ;\\\\
	make test ;\\\\
	cd $(ROOT) ;\\\\
	make package ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mbuild\\\\\\\\033[0m. ;\\\\

.PHONY: compile
compile:                      ## Only compile
	@>&2 echo 🤖 Running task \\\\\\\\033[32mcompile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mcompile\\\\\\\\033[0m. ;\\\\

.PHONY: default
default:                      ## Synthesize project files
	@>&2 echo 🤖 Running task \\\\\\\\033[32mdefault\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mdefault\\\\\\\\033[0m. ;\\\\

.PHONY: hello
hello:                        ## hello, world
	@>&2 echo 🤖 Running task \\\\\\\\033[32mhello\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	FOO=bar ;\\\\
	BAR=baz ;\\\\
	cd $(ROOT) ;\\\\
	echo hello ;\\\\
	cd $(ROOT) ;\\\\
	echo world ;\\\\
	cd $(ROOT) ;\\\\
	echo \\"with quotes\\" ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mhello\\\\\\\\033[0m. ;\\\\

.PHONY: package
package:                      ## Creates the distribution package
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpackage\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpackage\\\\\\\\033[0m. ;\\\\

.PHONY: post-compile
post-compile:                 ## Runs after successful compilation
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpost-compile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpost-compile\\\\\\\\033[0m. ;\\\\

.PHONY: pre-compile
pre-compile:                  ## Prepare the project for compilation
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpre-compile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpre-compile\\\\\\\\033[0m. ;\\\\

.PHONY: test
test:                         ## Run tests
	@>&2 echo 🤖 Running task \\\\\\\\033[32mtest\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mtest\\\\\\\\033[0m. ;\\\\

.PHONY: help
help:                         ## Show help messages for make targets
	@echo \\"\\\\033[1;39mCOMMANDS:\\\\033[0m\\"; grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \\":.*?## \\"}; {printf \\"\\\\t\\\\033[32m%-30s\\\\033[0m %s\\\\n\\", $$1, $$2}'
"
`;

exports[`subtasks 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

ROOT := $(dir $(firstword $(MAKEFILE_LIST)))

.PHONY: all
all: default

.PHONY: build
build:                        ## Full release build
	@>&2 echo 🤖 Running task \\\\\\\\033[32mbuild\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	cd $(ROOT) ;\\\\
	make default ;\\\\
	cd $(ROOT) ;\\\\
	make pre-compile ;\\\\
	cd $(ROOT) ;\\\\
	make compile ;\\\\
	cd $(ROOT) ;\\\\
	make post-compile ;\\\\
	cd $(ROOT) ;\\\\
	make test ;\\\\
	cd $(ROOT) ;\\\\
	make package ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mbuild\\\\\\\\033[0m. ;\\\\

.PHONY: compile
compile:                      ## Only compile
	@>&2 echo 🤖 Running task \\\\\\\\033[32mcompile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mcompile\\\\\\\\033[0m. ;\\\\

.PHONY: default
default:                      ## Synthesize project files
	@>&2 echo 🤖 Running task \\\\\\\\033[32mdefault\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mdefault\\\\\\\\033[0m. ;\\\\

.PHONY: hello
hello:                        ## No description
	@>&2 echo 🤖 Running task \\\\\\\\033[32mhello\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	cd $(ROOT) ;\\\\
	echo hello ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mhello\\\\\\\\033[0m. ;\\\\

.PHONY: package
package:                      ## Creates the distribution package
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpackage\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpackage\\\\\\\\033[0m. ;\\\\

.PHONY: post-compile
post-compile:                 ## Runs after successful compilation
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpost-compile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpost-compile\\\\\\\\033[0m. ;\\\\

.PHONY: pre-compile
pre-compile:                  ## Prepare the project for compilation
	@>&2 echo 🤖 Running task \\\\\\\\033[32mpre-compile\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mpre-compile\\\\\\\\033[0m. ;\\\\

.PHONY: test
test:                         ## Run tests
	@>&2 echo 🤖 Running task \\\\\\\\033[32mtest\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mtest\\\\\\\\033[0m. ;\\\\

.PHONY: world
world:                        ## No description
	@>&2 echo 🤖 Running task \\\\\\\\033[32mworld\\\\\\\\033[0m... ;\\\\
	set -e ;\\\\
	cd $(ROOT) ;\\\\
	echo \\"running hello\\" ;\\\\
	cd $(ROOT) ;\\\\
	make hello ;\\\\
	>&2 echo 🤖 Finished task \\\\\\\\033[32mworld\\\\\\\\033[0m. ;\\\\

.PHONY: help
help:                         ## Show help messages for make targets
	@echo \\"\\\\033[1;39mCOMMANDS:\\\\033[0m\\"; grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \\":.*?## \\"}; {printf \\"\\\\t\\\\033[32m%-30s\\\\033[0m %s\\\\n\\", $$1, $$2}'
"
`;
