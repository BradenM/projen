# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

build:
  image:
    name: alpine
  needs: []
  variables:
    ci: "true"
  artifacts:
    paths:
      - .repo.patch
      - dist
    when: always
  script:
    - apk add --update git bash rsync
    - apk add --update nodejs npm yarn
    - yarn install --check-files
    - /bin/bash ./projen.bash build
    - git add .
    - >-
      if ! git diff --staged --patch --exit-code > .repo.patch; then
        echo "Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch."
        cat .repo.patch
        exit 1
      fi
  after_script: []
self_mutation:
  image:
    name: alpine
  needs:
    - build
  rules:
    - when: always
  artifacts: {}
  script:
    - |-
      if true && ! false; then
        __cond__=true
      else
        echo "Job skipped"
        __cond__=false
      fi
    - ${__cond__} && (apk add --update git bash rsync)
    - ${__cond__} && (apk add --update nodejs npm yarn)
    - ${__cond__} && ([ -s ./.repo.patch ] || exit 0)
    - ${__cond__} && (git apply ./.repo.patch)
    - ${__cond__} && (rm -f ./.repo.patch)
    - ${__cond__} && (git config user.name "github-actions")
    - ${__cond__} && (git config user.email "github-actions@github.com")
    - ${__cond__} && (git add .)
    - '${__cond__} && (git commit -s -m "chore: self mutation")'
  after_script: []
package_js:
  image:
    name: alpine
  needs:
    - build
  artifacts: {}
  script:
    - apk add --update git bash rsync
    - apk add --update nodejs npm yarn
    - "[ -s ./.repo.patch ] && exit 0"
    - mv dist .repo
    - cd .repo && yarn install --check-files --frozen-lockfile
    - cd .repo && npx projen package:js
    - mv .repo/dist dist
  after_script: []
package_java:
  image:
    name: alpine
  needs:
    - build
  artifacts: {}
  script:
    - apk add --update git bash rsync
    - apk add --update nodejs npm yarn
    - apk add --update openjdk11-jre
    - "[ -s ./.repo.patch ] && exit 0"
    - mv dist .repo
    - cd .repo && yarn install --check-files --frozen-lockfile
    - cd .repo && npx projen package:java
    - mv .repo/dist dist
  after_script: []
package_python:
  image:
    name: alpine
  needs:
    - build
  artifacts: {}
  script:
    - apk add --update git bash rsync
    - apk add --update nodejs npm yarn
    - apk add --update python3
    - "[ -s ./.repo.patch ] && exit 0"
    - mv dist .repo
    - cd .repo && yarn install --check-files --frozen-lockfile
    - cd .repo && npx projen package:python
    - mv .repo/dist dist
  after_script: []
package_go:
  image:
    name: alpine
  needs:
    - build
  artifacts: {}
  script:
    - apk add --update git bash rsync
    - apk add --update nodejs npm yarn
    - apk add --update go
    - "[ -s ./.repo.patch ] && exit 0"
    - mv dist .repo
    - cd .repo && yarn install --check-files --frozen-lockfile
    - cd .repo && npx projen package:go
    - mv .repo/dist dist
  after_script: []
post_build_integ:
  image:
    name: alpine
  needs:
    - build
  artifacts: {}
  script:
    - apk add --update git bash rsync
    - apk add --update nodejs npm yarn
    - apk add --update python3
    - apk add --update go
    - "[ -s ./.repo.patch ] && exit 0"
    - yarn install --check-files --frozen-lockfile
    - /bin/bash ./projen.bash integ
  after_script: []
