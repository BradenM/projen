# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

build:
  image:
    name: alpine
  needs: []
  variables:
    CI: "true"
  artifacts:
    paths:
      - .self-mutation
      - dist
    when: always
  script:
    - apk add --update git bash rsync
    - apk add --update nodejs npm yarn
    - yarn install --check-files
    - /bin/bash ./projen.bash build
    - git add .
    - >-
      mkdir -p .self-mutation

      if ! git diff --staged --patch --exit-code > .self-mutation/patch.diff; then
        echo "Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch."
        cat .self-mutation/patch.diff
        exit 1
      fi
  after_script: []
self-mutation:
  image:
    name: alpine
  needs:
    - build
  rules:
    - when: always
  variables:
    PROJEN_TOKEN: $PROJEN_TOKEN
  artifacts: {}
  script:
    - |-
      if true && ! false; then
        __cond__=true
      else
        echo "Job skipped"
        __cond__=false
      fi
    - ${__cond__} && apk add --update git bash rsync
    - ${__cond__} && apk add --update nodejs npm yarn
    - ${__cond__} && [ -s ./.self-mutation/patch.diff ] || exit 0
    - ${__cond__} && git apply ./.self-mutation/patch.diff
    - ${__cond__} && rm -f ./.self-mutation
    - ${__cond__} && git config user.name "github-actions"
    - ${__cond__} && git config user.email "github-actions@github.com"
    - ${__cond__} && git add .
    - '${__cond__} && git commit -s -m "chore: self mutation"'
    - apk add --update openssh
    - git remote set-url --push origin
      https://${GITLAB_USER_LOGIN}:${PROJEN_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git
    - git push origin HEAD:${CI_COMMIT_REF_NAME}
  after_script: []
package-js:
  image:
    name: alpine
  needs:
    - build
  variables: {}
  artifacts: {}
  script:
    - apk add --update git bash rsync
    - apk add --update nodejs npm yarn
    - "[ -s ./.self-mutation/patch.diff ] && exit 0"
    - mv dist .repo
    - (cd .repo && yarn install --check-files --frozen-lockfile)
    - (cd .repo && npx projen package:js)
    - mv .repo/dist dist
  after_script: []
package-java:
  image:
    name: alpine
  needs:
    - build
  variables: {}
  artifacts: {}
  script:
    - apk add --update git bash rsync
    - apk add --update nodejs npm yarn
    - apk add --update openjdk11-jre
    - "[ -s ./.self-mutation/patch.diff ] && exit 0"
    - mv dist .repo
    - (cd .repo && yarn install --check-files --frozen-lockfile)
    - (cd .repo && npx projen package:java)
    - mv .repo/dist dist
  after_script: []
package-python:
  image:
    name: alpine
  needs:
    - build
  variables: {}
  artifacts: {}
  script:
    - apk add --update git bash rsync
    - apk add --update nodejs npm yarn
    - apk add --update python3
    - "[ -s ./.self-mutation/patch.diff ] && exit 0"
    - mv dist .repo
    - (cd .repo && yarn install --check-files --frozen-lockfile)
    - (cd .repo && npx projen package:python)
    - mv .repo/dist dist
  after_script: []
package-go:
  image:
    name: alpine
  needs:
    - build
  variables: {}
  artifacts: {}
  script:
    - apk add --update git bash rsync
    - apk add --update nodejs npm yarn
    - apk add --update go
    - "[ -s ./.self-mutation/patch.diff ] && exit 0"
    - mv dist .repo
    - (cd .repo && yarn install --check-files --frozen-lockfile)
    - (cd .repo && npx projen package:go)
    - mv .repo/dist dist
  after_script: []
post-build-integ:
  image:
    name: alpine
  needs:
    - build
  variables: {}
  artifacts: {}
  script:
    - apk add --update git bash rsync
    - apk add --update nodejs npm yarn
    - apk add --update python3
    - apk add --update go
    - "[ -s ./.self-mutation/patch.diff ] && exit 0"
    - yarn install --check-files --frozen-lockfile
    - /bin/bash ./projen.bash integ
  after_script: []
