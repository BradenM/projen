# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: build
on:
  pull_request: {}
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      CI: "true"
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 12.22.0
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Install dependencies
        run: yarn install --check-files
      - name: Build
        run: /bin/bash ./projen.bash build
      - name: Check for self-mutation
        run: >-
          mkdir -p ${BUILD_OUTPUT_DIR}

          touch dist/patch.diff

          git add .

          if ! git diff --staged --patch --exit-code > patch.diff; then
            echo "Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch."
            cat patch.diff
            rm -fr dist
            mv patch.diff dist
            exit 1
          fi
      - if: always()
        name: Prepare artifact directory "dist"
        run: |-
          if [ ! -e dist ]; then
            mkdir -p dist
            touch dist/.empty
          elif [ ! -d dist ]; then
            echo "Artifact in "dist" must be a directory"
            exit 1
          fi
      - name: Upload dist
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: dist
          path: dist
  self-mutation:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: (always()) && (! (github.event.pull_request.head.repo.full_name !=
      github.repository))
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Skip if there was no self-mutation
        run: "[ -s ./dist/patch.diff ] || exit 0"
      - name: Apply self-mutation
        run: |-
          git apply ./dist/patch.diff
          rm -rf ./dist
      - name: Push changes
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -s -m "chore: self mutation"
      - name: Push changes
        run: git push origin HEAD:${{ github.event.pull_request.head.ref }}
  package-js:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Skip if self-mutation happened
        run: "[ -s ./dist/patch.diff ] && exit 0"
      - name: Prepare repository
        run: mv dist .repo
      - name: Install dependencies
        run: (cd .repo && yarn install --check-files --frozen-lockfile)
      - name: Package for js
        run: (cd .repo && npx projen package:js)
      - name: Extract build artifacts
        run: mv .repo/dist dist
  package-java:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11.x
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Skip if self-mutation happened
        run: "[ -s ./dist/patch.diff ] && exit 0"
      - name: Prepare repository
        run: mv dist .repo
      - name: Install dependencies
        run: (cd .repo && yarn install --check-files --frozen-lockfile)
      - name: Package for java
        run: (cd .repo && npx projen package:java)
      - name: Extract build artifacts
        run: mv .repo/dist dist
  package-python:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Skip if self-mutation happened
        run: "[ -s ./dist/patch.diff ] && exit 0"
      - name: Prepare repository
        run: mv dist .repo
      - name: Install dependencies
        run: (cd .repo && yarn install --check-files --frozen-lockfile)
      - name: Package for python
        run: (cd .repo && npx projen package:python)
      - name: Extract build artifacts
        run: mv .repo/dist dist
  package-go:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - uses: actions/setup-go@v2
        with:
          go-version: ^1.16.0
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Skip if self-mutation happened
        run: "[ -s ./dist/patch.diff ] && exit 0"
      - name: Prepare repository
        run: mv dist .repo
      - name: Install dependencies
        run: (cd .repo && yarn install --check-files --frozen-lockfile)
      - name: Package for go
        run: (cd .repo && npx projen package:go)
      - name: Extract build artifacts
        run: mv .repo/dist dist
  post-build-integ:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Skip if self-mutation happened
        run: "[ -s ./dist/patch.diff ] && exit 0"
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: post-build-integ
        run: /bin/bash ./projen.bash integ
